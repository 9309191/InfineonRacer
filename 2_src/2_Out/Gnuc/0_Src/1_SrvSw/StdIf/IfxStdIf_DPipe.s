	.file	"IfxStdIf_DPipe.c"
.section .text,"ax",@progbits
.Ltext0:
.section .rodata,"a",@progbits
.LC0:
	.string	"count < STDIF_DPIPE_MAX_PRINT_SIZE"
.LC1:
	.string	"0_Src/1_SrvSw/StdIf/IfxStdIf_DPipe.c"
.section .text.IfxStdIf_DPipe_print,"ax",@progbits
	.align 1
	.global	IfxStdIf_DPipe_print
	.type	IfxStdIf_DPipe_print, @function
IfxStdIf_DPipe_print:
.LFB17:
	.file 1 "0_Src/1_SrvSw/StdIf/IfxStdIf_DPipe.c"
	.loc 1 34 0
.LVL0:
	.loc 1 35 0
	ld.bu	%d15, [%a4] 4
	.loc 1 34 0
	lea	%SP, [%SP] -264
.LCFI0:
	.loc 1 34 0
	mov.aa	%a15, %a4
	.loc 1 35 0
	jz	%d15, .L5
	ret
.L5:
.LVL1:
.LBB5:
	.loc 1 41 0
	lea	%a4, [%SP] 6
.LVL2:
	lea	%a6, [%SP] 264
	call	vsprintf
.LVL3:
	.loc 1 43 0
	lea	%a4, [%SP] 6
	call	strlen
	extr	%d2, %d2, 0, 16
.LVL4:
	.loc 1 44 0
	lt	%d15, %d2, 255
.LVL5:
	.loc 1 43 0
	st.h	[%SP] 262, %d2
	.loc 1 44 0
	jnz	%d15, .L3
	.loc 1 44 0 is_stmt 0 discriminator 1
	movh.a	%a2, hi:Assert_verboseLevel
	ld.w	%d15, [%a2] lo:Assert_verboseLevel
	jlt.u	%d15, 2, .L3
	.loc 1 44 0 discriminator 2
	movh.a	%a4, hi:.LC0
	movh.a	%a5, hi:.LC1
	movh.a	%a6, hi:__func__.2544
	mov	%d4, 2
	lea	%a4, [%a4] lo:.LC0
	lea	%a5, [%a5] lo:.LC1
	mov	%d5, 44
	lea	%a6, [%a6] lo:__func__.2544
	call	Ifx_Assert_doLevel
.LVL6:
.L3:
.LBB6:
.LBB7:
	.file 2 "0_Src/1_SrvSw/StdIf/IfxStdIf_DPipe.h"
	.loc 2 247 0 is_stmt 1
	ld.a	%a2, [%a15] 8
	ld.a	%a4, [%a15]0
	mov	%e4, -1
	lea	%a5, [%SP] 6
.LVL7:
	lea	%a6, [%SP] 262
	sh	%d5, -1
	calli	%a2
.LVL8:
	ret
.LBE7:
.LBE6:
.LBE5:
.LFE17:
	.size	IfxStdIf_DPipe_print, .-IfxStdIf_DPipe_print
.section .rodata.__func__.2544,"a",@progbits
	.type	__func__.2544, @object
	.size	__func__.2544, 21
__func__.2544:
	.string	"IfxStdIf_DPipe_print"
.section .debug_frame,"",@progbits
.Lframe0:
	.uaword	.LECIE0-.LSCIE0
.LSCIE0:
	.uaword	0xffffffff
	.byte	0x1
	.string	""
	.uleb128 0x1
	.sleb128 1
	.byte	0x1b
	.byte	0xc
	.uleb128 0x1a
	.uleb128 0
	.align 2
.LECIE0:
.LSFDE0:
	.uaword	.LEFDE0-.LASFDE0
.LASFDE0:
	.uaword	.Lframe0
	.uaword	.LFB17
	.uaword	.LFE17-.LFB17
	.byte	0x4
	.uaword	.LCFI0-.LFB17
	.byte	0xe
	.uleb128 0x108
	.align 2
.LEFDE0:
.section .text,"ax",@progbits
.Letext0:
	.file 3 "./0_Src/4_McHal/Tricore/Cpu/Std/Platform_Types.h"
	.file 4 "./0_Src/4_McHal/Tricore/Cpu/Std/Ifx_Types.h"
	.file 5 "0_Src/1_SrvSw/StdIf/IfxStdIf.h"
	.file 6 "c:\\hightec\\toolchains\\tricore\\v4.6.6.0-infineon-1.1\\bin\\../lib/gcc/tricore/4.6.4/include/stdarg.h"
	.file 7 "./0_Src/1_SrvSw/SysSe/Bsp/Assert.h"
.section .debug_info,"",@progbits
.Ldebug_info0:
	.uaword	0x8ce
	.uahalf	0x2
	.uaword	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.string	"GNU C 4.6.4 build on 2015-11-25"
	.byte	0x1
	.string	"0_Src/1_SrvSw/StdIf/IfxStdIf_DPipe.c"
	.string	"D:\\\\GitRepo\\\\InfineonRacer\\\\2_src\\\\InfineonRacer_TC23xA"
	.uaword	0
	.uaword	0
	.uaword	.Ldebug_ranges0+0
	.uaword	.Ldebug_line0
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.string	"long int"
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.string	"long unsigned int"
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.string	"signed char"
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.string	"unsigned char"
	.uleb128 0x3
	.string	"sint16"
	.byte	0x3
	.byte	0x5a
	.uaword	0xf0
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.string	"short int"
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.string	"short unsigned int"
	.uleb128 0x3
	.string	"sint32"
	.byte	0x3
	.byte	0x5c
	.uaword	0x9a
	.uleb128 0x3
	.string	"uint32"
	.byte	0x3
	.byte	0x5d
	.uaword	0xa6
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.string	"float"
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.string	"double"
	.uleb128 0x3
	.string	"boolean"
	.byte	0x3
	.byte	0x68
	.uaword	0xd1
	.uleb128 0x3
	.string	"sint64"
	.byte	0x4
	.byte	0x24
	.uaword	0x15f
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.string	"long long int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.string	"long long unsigned int"
	.uleb128 0x3
	.string	"pchar"
	.byte	0x4
	.byte	0x27
	.uaword	0x197
	.uleb128 0x4
	.byte	0x4
	.uaword	0x19d
	.uleb128 0x5
	.uaword	0x1a2
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.string	"char"
	.uleb128 0x6
	.byte	0x4
	.uleb128 0x3
	.string	"Ifx_TickTime"
	.byte	0x4
	.byte	0x2b
	.uaword	0x151
	.uleb128 0x3
	.string	"Ifx_SizeT"
	.byte	0x4
	.byte	0x38
	.uaword	0xe2
	.uleb128 0x3
	.string	"IfxStdIf_InterfaceDriver"
	.byte	0x5
	.byte	0x61
	.uaword	0x1aa
	.uleb128 0x3
	.string	"IfxStdIf_DPipe"
	.byte	0x2
	.byte	0x33
	.uaword	0x207
	.uleb128 0x7
	.string	"IfxStdIf_DPipe_"
	.byte	0x4c
	.byte	0x2
	.byte	0xd8
	.uaword	0x3ac
	.uleb128 0x8
	.string	"driver"
	.byte	0x2
	.byte	0xda
	.uaword	0x1d1
	.byte	0x2
	.byte	0x23
	.uleb128 0
	.uleb128 0x8
	.string	"txDisabled"
	.byte	0x2
	.byte	0xdb
	.uaword	0x142
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x8
	.string	"write"
	.byte	0x2
	.byte	0xde
	.uaword	0x3f8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x8
	.string	"read"
	.byte	0x2
	.byte	0xdf
	.uaword	0x43f
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x8
	.string	"getReadCount"
	.byte	0x2
	.byte	0xe0
	.uaword	0x45a
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x8
	.string	"getReadEvent"
	.byte	0x2
	.byte	0xe1
	.uaword	0x493
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x8
	.string	"getWriteCount"
	.byte	0x2
	.byte	0xe2
	.uaword	0x540
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x8
	.string	"getWriteEvent"
	.byte	0x2
	.byte	0xe3
	.uaword	0x564
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x8
	.string	"canReadCount"
	.byte	0x2
	.byte	0xe4
	.uaword	0x59e
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x8
	.string	"canWriteCount"
	.byte	0x2
	.byte	0xe5
	.uaword	0x5e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x8
	.string	"flushTx"
	.byte	0x2
	.byte	0xe6
	.uaword	0x605
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x8
	.string	"clearTx"
	.byte	0x2
	.byte	0xe7
	.uaword	0x66e
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x8
	.string	"clearRx"
	.byte	0x2
	.byte	0xe8
	.uaword	0x63e
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x8
	.string	"onReceive"
	.byte	0x2
	.byte	0xe9
	.uaword	0x68c
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x8
	.string	"onTransmit"
	.byte	0x2
	.byte	0xea
	.uaword	0x6ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x8
	.string	"onError"
	.byte	0x2
	.byte	0xeb
	.uaword	0x6cd
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x8
	.string	"getSendCount"
	.byte	0x2
	.byte	0xed
	.uaword	0x4cc
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x8
	.string	"getTxTimeStamp"
	.byte	0x2
	.byte	0xee
	.uaword	0x505
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x8
	.string	"resetSendCount"
	.byte	0x2
	.byte	0xef
	.uaword	0x6eb
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_WriteEvent"
	.byte	0x2
	.byte	0x35
	.uaword	0x3cd
	.uleb128 0x4
	.byte	0x4
	.uaword	0x3d3
	.uleb128 0x9
	.uaword	0x142
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ReadEvent"
	.byte	0x2
	.byte	0x36
	.uaword	0x3cd
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_Write"
	.byte	0x2
	.byte	0x48
	.uaword	0x414
	.uleb128 0x4
	.byte	0x4
	.uaword	0x41a
	.uleb128 0xa
	.byte	0x1
	.uaword	0x142
	.uaword	0x439
	.uleb128 0xb
	.uaword	0x1d1
	.uleb128 0xb
	.uaword	0x1aa
	.uleb128 0xb
	.uaword	0x439
	.uleb128 0xb
	.uaword	0x1ac
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x1c0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_Read"
	.byte	0x2
	.byte	0x58
	.uaword	0x414
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetReadCount"
	.byte	0x2
	.byte	0x61
	.uaword	0x47d
	.uleb128 0x4
	.byte	0x4
	.uaword	0x483
	.uleb128 0xa
	.byte	0x1
	.uaword	0x113
	.uaword	0x493
	.uleb128 0xb
	.uaword	0x1d1
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetReadEvent"
	.byte	0x2
	.byte	0x69
	.uaword	0x4b6
	.uleb128 0x4
	.byte	0x4
	.uaword	0x4bc
	.uleb128 0xa
	.byte	0x1
	.uaword	0x3d8
	.uaword	0x4cc
	.uleb128 0xb
	.uaword	0x1d1
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetSendCount"
	.byte	0x2
	.byte	0x71
	.uaword	0x4ef
	.uleb128 0x4
	.byte	0x4
	.uaword	0x4f5
	.uleb128 0xa
	.byte	0x1
	.uaword	0x121
	.uaword	0x505
	.uleb128 0xb
	.uaword	0x1d1
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetTxTimeStamp"
	.byte	0x2
	.byte	0x79
	.uaword	0x52a
	.uleb128 0x4
	.byte	0x4
	.uaword	0x530
	.uleb128 0xa
	.byte	0x1
	.uaword	0x1ac
	.uaword	0x540
	.uleb128 0xb
	.uaword	0x1d1
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetWriteCount"
	.byte	0x2
	.byte	0x81
	.uaword	0x47d
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetWriteEvent"
	.byte	0x2
	.byte	0x89
	.uaword	0x588
	.uleb128 0x4
	.byte	0x4
	.uaword	0x58e
	.uleb128 0xa
	.byte	0x1
	.uaword	0x3ac
	.uaword	0x59e
	.uleb128 0xb
	.uaword	0x1d1
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_CanReadCount"
	.byte	0x2
	.byte	0x94
	.uaword	0x5c1
	.uleb128 0x4
	.byte	0x4
	.uaword	0x5c7
	.uleb128 0xa
	.byte	0x1
	.uaword	0x142
	.uaword	0x5e1
	.uleb128 0xb
	.uaword	0x1d1
	.uleb128 0xb
	.uaword	0x1c0
	.uleb128 0xb
	.uaword	0x1ac
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_CanWriteCount"
	.byte	0x2
	.byte	0x9f
	.uaword	0x5c1
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_FlushTx"
	.byte	0x2
	.byte	0xa9
	.uaword	0x623
	.uleb128 0x4
	.byte	0x4
	.uaword	0x629
	.uleb128 0xa
	.byte	0x1
	.uaword	0x142
	.uaword	0x63e
	.uleb128 0xb
	.uaword	0x1d1
	.uleb128 0xb
	.uaword	0x1ac
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ClearRx"
	.byte	0x2
	.byte	0xb0
	.uaword	0x65c
	.uleb128 0x4
	.byte	0x4
	.uaword	0x662
	.uleb128 0xc
	.byte	0x1
	.uaword	0x66e
	.uleb128 0xb
	.uaword	0x1d1
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ClearTx"
	.byte	0x2
	.byte	0xb7
	.uaword	0x65c
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnReceive"
	.byte	0x2
	.byte	0xbf
	.uaword	0x65c
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnTransmit"
	.byte	0x2
	.byte	0xc6
	.uaword	0x65c
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnError"
	.byte	0x2
	.byte	0xcd
	.uaword	0x65c
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ResetSendCount"
	.byte	0x2
	.byte	0xd4
	.uaword	0x65c
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.string	"unsigned int"
	.uleb128 0x3
	.string	"__gnuc_va_list"
	.byte	0x6
	.byte	0x28
	.uaword	0x736
	.uleb128 0xd
	.byte	0x4
	.string	"__builtin_va_list"
	.uleb128 0x3
	.string	"va_list"
	.byte	0x6
	.byte	0x66
	.uaword	0x720
	.uleb128 0xe
	.string	"IfxStdIf_DPipe_write"
	.byte	0x2
	.byte	0xf5
	.byte	0x1
	.uaword	0x142
	.byte	0x3
	.uaword	0x7b1
	.uleb128 0xf
	.string	"stdif"
	.byte	0x2
	.byte	0xf5
	.uaword	0x7b1
	.uleb128 0xf
	.string	"data"
	.byte	0x2
	.byte	0xf5
	.uaword	0x1aa
	.uleb128 0xf
	.string	"count"
	.byte	0x2
	.byte	0xf5
	.uaword	0x439
	.uleb128 0xf
	.string	"timeout"
	.byte	0x2
	.byte	0xf5
	.uaword	0x1ac
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x1f1
	.uleb128 0x10
	.byte	0x1
	.string	"IfxStdIf_DPipe_print"
	.byte	0x1
	.byte	0x21
	.byte	0x1
	.uaword	.LFB17
	.uaword	.LFE17
	.uaword	.LLST0
	.uaword	0x88f
	.uleb128 0x11
	.string	"stdif"
	.byte	0x1
	.byte	0x21
	.uaword	0x7b1
	.uaword	.LLST1
	.uleb128 0x11
	.string	"format"
	.byte	0x1
	.byte	0x21
	.uaword	0x18a
	.uaword	.LLST2
	.uleb128 0x12
	.uleb128 0x13
	.string	"__func__"
	.uaword	0x89f
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.uaword	__func__.2544
	.uleb128 0x14
	.uaword	.LBB5
	.uaword	.LBE5
	.uleb128 0x15
	.string	"message"
	.byte	0x1
	.byte	0x25
	.uaword	0x8a4
	.byte	0x3
	.byte	0x91
	.sleb128 -258
	.uleb128 0x16
	.string	"count"
	.byte	0x1
	.byte	0x26
	.uaword	0x1c0
	.uaword	.LLST3
	.uleb128 0x15
	.string	"args"
	.byte	0x1
	.byte	0x27
	.uaword	0x74a
	.byte	0x3
	.byte	0x91
	.sleb128 0
	.byte	0x9f
	.uleb128 0x17
	.uaword	0x759
	.uaword	.LBB6
	.uaword	.LBE6
	.byte	0x1
	.byte	0x2e
	.uleb128 0x18
	.uaword	0x7a1
	.uaxword	0x7fffffffffffffff
	.uleb128 0x19
	.uaword	0x794
	.byte	0x3
	.byte	0x91
	.sleb128 -2
	.byte	0x9f
	.uleb128 0x1a
	.uaword	0x788
	.uaword	.LLST4
	.uleb128 0x19
	.uaword	0x77b
	.byte	0x1
	.byte	0x6f
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uaword	0x1a2
	.uaword	0x89f
	.uleb128 0x1c
	.uaword	0xa6
	.byte	0x14
	.byte	0
	.uleb128 0x5
	.uaword	0x88f
	.uleb128 0x1b
	.uaword	0x1a2
	.uaword	0x8b4
	.uleb128 0x1c
	.uaword	0xa6
	.byte	0xff
	.byte	0
	.uleb128 0x1d
	.string	"Assert_verboseLevel"
	.byte	0x7
	.byte	0x7b
	.uaword	0x121
	.byte	0x1
	.byte	0x1
	.byte	0
.section .debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x52
	.uleb128 0x1
	.uleb128 0x55
	.uleb128 0x6
	.uleb128 0x10
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x7
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0
	.byte	0
	.byte	0
.section .debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.uaword	.LFB17
	.uaword	.LCFI0
	.uahalf	0x2
	.byte	0x8a
	.sleb128 0
	.uaword	.LCFI0
	.uaword	.LFE17
	.uahalf	0x3
	.byte	0x8a
	.sleb128 264
	.uaword	0
	.uaword	0
.LLST1:
	.uaword	.LVL0
	.uaword	.LVL2
	.uahalf	0x1
	.byte	0x64
	.uaword	.LVL2
	.uaword	.LFE17
	.uahalf	0x1
	.byte	0x6f
	.uaword	0
	.uaword	0
.LLST2:
	.uaword	.LVL0
	.uaword	.LVL3-1
	.uahalf	0x1
	.byte	0x65
	.uaword	0
	.uaword	0
.LLST3:
	.uaword	.LVL5
	.uaword	.LVL6-1
	.uahalf	0x1
	.byte	0x52
	.uaword	.LVL6-1
	.uaword	.LFE17
	.uahalf	0x2
	.byte	0x91
	.sleb128 -2
	.uaword	0
	.uaword	0
.LLST4:
	.uaword	.LVL6
	.uaword	.LVL7
	.uahalf	0x4
	.byte	0x91
	.sleb128 -258
	.byte	0x9f
	.uaword	.LVL7
	.uaword	.LVL8-1
	.uahalf	0x1
	.byte	0x65
	.uaword	.LVL8-1
	.uaword	.LFE17
	.uahalf	0x4
	.byte	0x91
	.sleb128 -258
	.byte	0x9f
	.uaword	0
	.uaword	0
.section .debug_aranges,"",@progbits
	.uaword	0x1c
	.uahalf	0x2
	.uaword	.Ldebug_info0
	.byte	0x4
	.byte	0
	.uahalf	0
	.uahalf	0
	.uaword	.LFB17
	.uaword	.LFE17-.LFB17
	.uaword	0
	.uaword	0
.section .debug_ranges,"",@progbits
.Ldebug_ranges0:
	.uaword	.LFB17
	.uaword	.LFE17
	.uaword	0
	.uaword	0
.section .debug_line,"",@progbits
.Ldebug_line0:
	.extern	Ifx_Assert_doLevel,STT_FUNC,0
	.extern	Assert_verboseLevel,STT_OBJECT,4
	.extern	strlen,STT_FUNC,0
	.extern	vsprintf,STT_FUNC,0
	.ident	"GCC: (HighTec Release v4.6.6.0-infineon-1.1) 4.6.4 build on 2015-11-25"
